{"ast":null,"code":"import _slicedToArray from \"/Users/Addison/Desktop/TSL-The-Wall/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Addison/Desktop/TSL-The-Wall/src/components/ListItems.js\";\nimport React from 'react';\nimport { List, Avatar, Button } from 'antd';\nimport axios from 'axios';\nimport WrappedUpdatePostForm from './UpdateForm';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions/auth';\n\nconst ListItem = props => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        formOn = _React$useState2[0],\n        setFormOn = _React$useState2[1];\n\n  const toggleForm = () => {\n    setFormOn(!formOn);\n  };\n\n  const handleDelete = () => {\n    let config = {\n      headers: {\n        'Authorization': \"Token \".concat(props.token)\n      }\n    };\n    axios.delete(\"\".concat(props.item.url), config);\n    props.update();\n  };\n\n  return React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, formOn ? React.createElement(WrappedUpdatePostForm, {\n    toggleForm: toggleForm,\n    update: props.update,\n    url: props.item.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(List.Item.Meta, {\n    avatar: React.createElement(Avatar, {\n      src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }),\n    title: React.createElement(\"a\", {\n      href: \"https://ant.design\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, props.item.user),\n    description: props.item.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), props.username === props.item.user && React.createElement(Button, {\n    type: \"danger\",\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Delete Post\"), React.createElement(\"div\", {\n    style: {\n      width: '10px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), props.username === props.item.user && React.createElement(Button, {\n    type: \"primary\",\n    onClick: toggleForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Update Post\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.token !== null,\n    token: state.token,\n    username: state.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem);","map":{"version":3,"sources":["/Users/Addison/Desktop/TSL-The-Wall/src/components/ListItems.js"],"names":["React","List","Avatar","Button","axios","WrappedUpdatePostForm","connect","actions","ListItem","props","useState","formOn","setFormOn","toggleForm","handleDelete","config","headers","token","delete","item","url","update","user","content","username","width","mapStateToProps","state","isAuthenticated","mapDispatchToProps","dispatch","onTryAutoSignup","authCheckState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { List, Avatar, Button } from 'antd';\nimport axios from 'axios'\nimport WrappedUpdatePostForm from './UpdateForm';\nimport { connect } from 'react-redux'\nimport * as actions from '../store/actions/auth'\n\n\n\nconst ListItem = (props) => {\n\n    const [formOn, setFormOn] = React.useState(false)\n \n        const toggleForm = () => {\n          setFormOn(!formOn)\n        } \n\n    const handleDelete = () => {\n        let config = {\n          headers: {\n            'Authorization': `Token ${props.token}`\n          }\n        }\n        axios.delete(`${props.item.url}`, config)\n        props.update()\n      }\n\n    return(\n        <List.Item>\n            { formOn ?\n            <WrappedUpdatePostForm toggleForm={toggleForm} update={props.update} url={props.item.url}/> :\n            <>\n                <List.Item.Meta\n                avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                title={<a href=\"https://ant.design\">{props.item.user}</a>}\n                description={props.item.content}\n                />\n                {props.username === props.item.user &&\n                  <Button type=\"danger\" onClick={handleDelete}>Delete Post</Button>\n                }\n                  <div style={{width: '10px'}}></div>\n                  {props.username === props.item.user &&\n                  <Button type=\"primary\" onClick={toggleForm}>Update Post</Button>\n                }\n            </>\n            }\n            \n            \n            \n            \n          </List.Item>\n    )\n}\n\nconst mapStateToProps = state => {\n  return{\n    isAuthenticated: state.token !== null,\n    token: state.token,\n    username: state.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListItem)\n"]},"metadata":{},"sourceType":"module"}