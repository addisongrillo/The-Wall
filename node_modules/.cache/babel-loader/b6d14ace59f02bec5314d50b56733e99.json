{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, username) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token,\n    username: username\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(\"https://thewall2019.herokuapp.com/authenticate/\", {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const username = res.data.username;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token, username));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.get(\"https://thewall2019.herokuapp.com/email/?email=\".concat(email));\n    axios.post(\"https://thewall2019.herokuapp.com/rest-auth/registration/\", {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    const username = localStorage.getItem('username');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token, username));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/Addison/Desktop/TSL-The-Wall/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","username","AUTH_SUCCESS","authFail","error","AUTH_FAIL","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","AUTH_LOGOUT","authLogin","password","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","get","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, username) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        username: username\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`https://thewall2019.herokuapp.com/authenticate/`, { \n            username: username, \n            password: password \n        })\n        .then(res => {\n            const token = res.data.key;\n            const username = res.data.username\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n            localStorage.setItem('token', token);\n            localStorage.setItem('username', username);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token, username));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err));\n        })\n    };\n};\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.get(`https://thewall2019.herokuapp.com/email/?email=${email}`)\n        axios.post(`https://thewall2019.herokuapp.com/rest-auth/registration/`, {\n            username: username, \n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000); // 1 hour\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err));\n        })\n    };\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        const username = localStorage.getItem('username');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token, username));\n                dispatch(checkAuthTimeout( ( expirationDate.getTime() - new Date().getTime() ) / 1000 ));\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}